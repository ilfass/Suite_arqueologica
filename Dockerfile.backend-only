# ============================================================================
# DOCKERFILE PARA SOLO BACKEND - SUITE ARQUEOLÓGICA
# ============================================================================

# Etapa 1: Construcción del Backend
FROM node:18-alpine AS backend-builder

WORKDIR /app

# Copiar archivos del backend
COPY backend/package*.json ./backend/
COPY backend/tsconfig.json ./backend/

# Instalar dependencias del backend
RUN cd backend && npm install

# Copiar código fuente del backend
COPY backend/src ./backend/src

# Construir backend
RUN cd backend && npm run build

# Etapa 2: Imagen de producción
FROM node:18-alpine AS production

# Instalar dependencias del sistema
RUN apk add --no-cache dumb-init

# Crear usuario no-root
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Crear directorios de trabajo
WORKDIR /app

# Copiar archivos del backend
COPY --from=backend-builder --chown=nextjs:nodejs /app/backend/dist ./backend/dist
COPY --from=backend-builder --chown=nextjs:nodejs /app/backend/package*.json ./backend/

# Instalar dependencias de producción
RUN cd backend && npm install --omit=dev

# Script de inicio
COPY docker-entrypoint-simple.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Cambiar al usuario no-root
USER nextjs

# Exponer puerto
EXPOSE 4000

# Variables de entorno por defecto
ENV NODE_ENV=production
ENV PORT=4000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:4000/api/health || exit 1

# Comando de inicio
ENTRYPOINT ["docker-entrypoint.sh"] 