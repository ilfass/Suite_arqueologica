#!/bin/sh

# ============================================================================
# SCRIPT DE INICIO MEJORADO PARA DOCKER - SUITE ARQUEOL√ìGICA
# ============================================================================

set -e

echo "üöÄ Iniciando Suite Arqueol√≥gica en modo producci√≥n..."

# Funci√≥n para logging
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# Verificar variables de entorno cr√≠ticas
if [ -z "$SUPABASE_URL" ]; then
    echo "‚ùå ERROR: SUPABASE_URL no est√° definida"
    exit 1
fi

if [ -z "$SUPABASE_ANON_KEY" ]; then
    echo "‚ùå ERROR: SUPABASE_ANON_KEY no est√° definida"
    exit 1
fi

if [ -z "$JWT_SECRET" ]; then
    echo "‚ùå ERROR: JWT_SECRET no est√° definida"
    exit 1
fi

log "‚úÖ Variables de entorno verificadas"

# Iniciar backend en segundo plano
log "üîß Iniciando backend..."
cd /app/backend
node dist/index.js &
BACKEND_PID=$!

# Esperar a que el backend est√© listo (aumentado a 120 segundos)
log "‚è≥ Esperando a que el backend est√© listo..."
for i in $(seq 1 120); do
    if curl -f http://localhost:4000/api/health > /dev/null 2>&1; then
        log "‚úÖ Backend iniciado correctamente"
        break
    fi
    if [ $i -eq 120 ]; then
        echo "‚ùå ERROR: Backend no se inici√≥ en 120 segundos"
        echo "üìã Verificando proceso backend..."
        ps aux | grep node
        echo "üìã √öltimos logs del backend:"
        tail -20 /proc/$BACKEND_PID/fd/1 2>/dev/null || echo "No se pueden leer logs"
        exit 1
    fi
    sleep 1
done

# Iniciar frontend
log "üåê Iniciando frontend..."
cd /app/frontend-web
npm start &
FRONTEND_PID=$!

# Esperar a que el frontend est√© listo (aumentado a 180 segundos)
log "‚è≥ Esperando a que el frontend est√© listo..."
for i in $(seq 1 180); do
    if curl -f http://localhost:3000 > /dev/null 2>&1; then
        log "‚úÖ Frontend iniciado correctamente"
        break
    fi
    if [ $i -eq 180 ]; then
        echo "‚ö†Ô∏è  ADVERTENCIA: Frontend no se inici√≥ en 180 segundos, pero continuando..."
        # No salir con error, solo continuar
        break
    fi
    sleep 1
done

log "üéâ Suite Arqueol√≥gica iniciada correctamente!"
log "üìä URLs disponibles:"
log "   ‚Ä¢ Frontend: http://localhost:3000"
log "   ‚Ä¢ API: http://localhost:4000/api"
log "   ‚Ä¢ Health Check: http://localhost:4000/api/health"

# Funci√≥n para manejar se√±ales de terminaci√≥n
cleanup() {
    log "üõë Recibida se√±al de terminaci√≥n, cerrando aplicaciones..."
    kill $BACKEND_PID 2>/dev/null || true
    kill $FRONTEND_PID 2>/dev/null || true
    wait
    log "‚úÖ Aplicaciones cerradas correctamente"
    exit 0
}

# Configurar trap para manejar se√±ales
trap cleanup SIGTERM SIGINT

# Mantener el script ejecut√°ndose
wait 