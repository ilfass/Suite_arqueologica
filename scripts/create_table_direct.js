const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://avpaiyyjixtdopbciedr.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF2cGFpeXlqaXh0ZG9wYmNpZWRyIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODY2MDMyMywiZXhwIjoyMDY0MjM2MzIzfQ.jb6t6O2-c0SHv5WAw4F7u93dbGrZ8TKh0UTNzcNEOhc';

const supabase = createClient(supabaseUrl, supabaseKey);

async function createTableDirect() {
  console.log('üèóÔ∏è Creando tabla public_profiles directamente...');
  
  try {
    // Intentar insertar un registro de prueba para crear la tabla
    console.log('üìù Intentando crear tabla insertando datos de prueba...');
    
    const testData = {
      user_id: 'a9824343-3b45-4360-833c-8f241f7d835d',
      is_public: true,
      display_name: 'Dr. Fabian de Haro',
      bio: 'Arque√≥logo especializado en arqueolog√≠a prehisp√°nica con m√°s de 15 a√±os de experiencia en excavaciones en el noroeste argentino.',
      specialization: 'Arqueolog√≠a Prehisp√°nica, Cer√°mica Antigua, An√°lisis de Materiales',
      institution: 'Universidad de Buenos Aires',
      location: 'Buenos Aires, Argentina',
      email: 'lic.fabiande@gmail.com',
      website: 'https://arqueologia.uba.ar',
      social_media: {
        linkedin: 'https://linkedin.com/in/fabiandeharo',
        researchGate: 'https://researchgate.net/profile/fabiandeharo',
        academia: 'https://uba.academia.edu/fabiandeharo'
      },
      custom_message: 'Bienvenidos a mi espacio de investigaci√≥n arqueol√≥gica. Aqu√≠ encontrar√°n informaci√≥n sobre mis proyectos, hallazgos y publicaciones en el campo de la arqueolog√≠a prehisp√°nica del noroeste argentino.',
      public_projects: [
        'Proyecto Arqueol√≥gico Valle de Taf√≠ (2018-2023)',
        'Estudio de Cer√°mica Prehisp√°nica del Noroeste',
        'An√°lisis de Patrones de Asentamiento'
      ],
      public_findings: [
        'Descubrimiento de alfarer√≠a prehisp√°nica en Taf√≠ del Valle',
        'Identificaci√≥n de patrones de asentamiento en el per√≠odo tard√≠o',
        'An√°lisis de materiales l√≠ticos en contextos dom√©sticos'
      ],
      public_reports: [
        'Informe de Excavaci√≥n 2022 - Sitio Taf√≠ 1',
        'An√°lisis de Materiales Cer√°micos - Temporada 2021',
        'Estudio de Distribuci√≥n Espacial - Valle de Taf√≠'
      ],
      public_publications: [
        'De Haro, F. (2023). "Patrones de Asentamiento en el Valle de Taf√≠". Revista Arqueol√≥gica Argentina.',
        'De Haro, F. et al. (2022). "An√°lisis de Cer√°mica Prehisp√°nica del Noroeste". Arqueolog√≠a del NOA.',
        'De Haro, F. (2021). "Metodolog√≠as de Excavaci√≥n en Contextos Dom√©sticos". Actas del Congreso Nacional.'
      ]
    };

    const { data, error } = await supabase
      .from('public_profiles')
      .insert([testData])
      .select();

    if (error) {
      console.log('‚ùå Error creando tabla:', error.message);
      console.log('üí° La tabla debe ser creada manualmente en Supabase Dashboard');
      console.log('üìã SQL para crear la tabla:');
      console.log(`
CREATE TABLE public_profiles (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  is_public BOOLEAN DEFAULT false,
  display_name TEXT,
  bio TEXT,
  specialization TEXT,
  institution TEXT,
  location TEXT,
  email TEXT,
  website TEXT,
  social_media JSONB DEFAULT '{}',
  custom_message TEXT,
  public_projects TEXT[] DEFAULT '{}',
  public_findings TEXT[] DEFAULT '{}',
  public_reports TEXT[] DEFAULT '{}',
  public_publications TEXT[] DEFAULT '{}',
  profile_image TEXT,
  cover_image TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

CREATE INDEX idx_public_profiles_user_id ON public_profiles(user_id);
CREATE INDEX idx_public_profiles_is_public ON public_profiles(is_public);

ALTER TABLE public_profiles ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Users can view their own public profile" ON public_profiles FOR SELECT USING (auth.uid() = user_id);
CREATE POLICY "Users can insert their own public profile" ON public_profiles FOR INSERT WITH CHECK (auth.uid() = user_id);
CREATE POLICY "Users can update their own public profile" ON public_profiles FOR UPDATE USING (auth.uid() = user_id);
CREATE POLICY "Users can delete their own public profile" ON public_profiles FOR DELETE USING (auth.uid() = user_id);
CREATE POLICY "Anyone can view public profiles" ON public_profiles FOR SELECT USING (is_public = true);
      `);
    } else {
      console.log('‚úÖ Tabla creada y datos insertados exitosamente');
      console.log('üìä Datos insertados:', data);
    }

  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

createTableDirect(); 