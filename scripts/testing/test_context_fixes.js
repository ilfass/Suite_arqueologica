const http = require('http');

console.log('üß™ Probando correcciones del contexto...');

// Funci√≥n para hacer peticiones HTTP
function makeRequest(url, callback) {
  const options = {
    hostname: 'localhost',
    port: 3001,
    path: url,
    method: 'GET',
    headers: {
      'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36'
    }
  };

  const req = http.request(options, (res) => {
    let data = '';
    res.on('data', (chunk) => {
      data += chunk;
    });
    res.on('end', () => {
      callback(null, data, res.statusCode);
    });
  });

  req.on('error', (err) => {
    callback(err);
  });

  req.end();
}

// Prueba 1: Verificar que la p√°gina de hallazgos carga
console.log('\n1Ô∏è‚É£ Verificando p√°gina de hallazgos...');
makeRequest('/dashboard/researcher/findings', (err, data, statusCode) => {
  if (err) {
    console.log('‚ùå Error:', err.message);
  } else {
    console.log(`‚úÖ P√°gina de hallazgos (${statusCode}): OK`);
    
    // Verificar elementos clave
    const hasFindingsTitle = data.includes('Hallazgos Arqueol√≥gicos');
    const hasNewFindingButton = data.includes('Nuevo Hallazgo');
    const hasDebugPanel = data.includes('Debug - Estado del Contexto');
    const hasTestButtons = data.includes('üîß Test Contexto');
    
    console.log(`   üìä Elementos de la p√°gina:`);
    console.log(`      - T√≠tulo de hallazgos: ${hasFindingsTitle ? '‚úÖ' : '‚ùå'}`);
    console.log(`      - Bot√≥n nuevo hallazgo: ${hasNewFindingButton ? '‚úÖ' : '‚ùå'}`);
    console.log(`      - Panel de debug: ${hasDebugPanel ? '‚úÖ' : '‚ùå'}`);
    console.log(`      - Botones de test: ${hasTestButtons ? '‚úÖ' : '‚ùå'}`);
  }
});

// Prueba 2: Verificar p√°gina de prueba visual
console.log('\n2Ô∏è‚É£ Verificando p√°gina de prueba visual...');
makeRequest('/test-context-visual', (err, data, statusCode) => {
  if (err) {
    console.log('‚ùå Error:', err.message);
  } else {
    console.log(`‚úÖ P√°gina de prueba visual (${statusCode}): OK`);
    
    // Verificar elementos clave
    const hasContextStatus = data.includes('Estado del Contexto');
    const hasLocalStorage = data.includes('localStorage');
    const hasTestButtons = data.includes('üß™ Contexto Completo');
    const hasManualInput = data.includes('Contexto Manual');
    
    console.log(`   üìä Elementos de la p√°gina:`);
    console.log(`      - Estado del contexto: ${hasContextStatus ? '‚úÖ' : '‚ùå'}`);
    console.log(`      - localStorage visible: ${hasLocalStorage ? '‚úÖ' : '‚ùå'}`);
    console.log(`      - Botones de prueba: ${hasTestButtons ? '‚úÖ' : '‚ùå'}`);
    console.log(`      - Contexto manual: ${hasManualInput ? '‚úÖ' : '‚ùå'}`);
  }
});

console.log('\nüéØ Resumen de las correcciones implementadas:');
console.log('   ‚úÖ Contexto se guarda autom√°ticamente al seleccionar');
console.log('   ‚úÖ Contexto parcial (proyecto + √°rea) es v√°lido');
console.log('   ‚úÖ Contexto completo requiere proyecto + √°rea + sitio');
console.log('   ‚úÖ Selector no se cierra autom√°ticamente al seleccionar √°rea');
console.log('   ‚úÖ Indicador visual de contexto parcial/completo');
console.log('   ‚úÖ Botones de confirmar y limpiar en el selector');

console.log('\nüìã Para probar manualmente:');
console.log('   1. Abre http://localhost:3001/dashboard/researcher/findings');
console.log('   2. Haz clic en "üìç Seleccionar Contexto" en el header');
console.log('   3. Selecciona un Proyecto');
console.log('   4. Selecciona un √Årea');
console.log('   5. Verifica que puedes seleccionar un Sitio (opcional)');
console.log('   6. Verifica que el contexto se guarda autom√°ticamente');
console.log('   7. Verifica que aparece "Contexto Activo" con indicador');
console.log('   8. Prueba "Nuevo Hallazgo" y verifica que carga el contexto');

console.log('\nüîß Comandos para probar en consola del navegador:');
console.log('   // Ver contexto actual');
console.log('   console.log(JSON.parse(localStorage.getItem("investigator-context")));');
console.log('   ');
console.log('   // Establecer contexto de prueba');
console.log('   localStorage.setItem("investigator-context", JSON.stringify({');
console.log('     "project": "Proyecto Cazadores Recolectores - La Laguna",');
console.log('     "area": "Laguna La Brava",');
console.log('     "site": "Sitio Pampeano La Laguna"');
console.log('   }));');
console.log('   window.location.reload();'); 