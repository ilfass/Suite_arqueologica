const puppeteer = require('puppeteer');

async function testLoginFixed() {
  console.log('üß™ Probando login corregido...');
  const browser = await puppeteer.launch({ 
    headless: false, 
    args: ['--no-sandbox', '--disable-setuid-sandbox'] 
  });
  
  try {
    const page = await browser.newPage();
    
    // Ir a la p√°gina de login
    console.log('üìÑ Navegando a la p√°gina de login...');
    await page.goto('http://localhost:3000/login');
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // Llenar credenciales
    console.log('üìù Llenando credenciales...');
    await page.type('input[placeholder*="Email"]', 'lic.fabiande@gmail.com');
    await page.type('input[placeholder*="Password"]', 'test123');
    
    // Hacer click en el bot√≥n de login
    console.log('üîê Haciendo login...');
    await page.click('button[type="submit"]');
    
    // Esperar a que redirija al dashboard
    console.log('‚è≥ Esperando redirecci√≥n...');
    await page.waitForNavigation({ timeout: 10000 });
    
    // Verificar que estamos en el dashboard
    const currentUrl = page.url();
    console.log('üìã URL actual:', currentUrl);
    
    if (currentUrl.includes('/dashboard')) {
      console.log('‚úÖ Login exitoso - Redirigido al dashboard');
    } else {
      console.log('‚ùå Login fall√≥ - No se redirigi√≥ al dashboard');
    }
    
    // Verificar que no hay errores de acceso restringido
    const pageContent = await page.content();
    if (pageContent.includes('Acceso restringido') || pageContent.includes('Access denied')) {
      console.log('‚ùå Se encontr√≥ mensaje de acceso restringido');
    } else {
      console.log('‚úÖ No se encontraron mensajes de acceso restringido');
    }
    
    console.log('‚úÖ Prueba completada');
    console.log('üîç Navegador abierto para inspecci√≥n manual. Presiona Ctrl+C para cerrar.');
    await new Promise(() => {}); // Keep browser open
    
  } catch (error) {
    console.error('‚ùå Error durante la prueba:', error);
  }
}

testLoginFixed(); 